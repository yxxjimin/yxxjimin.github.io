{"version":3,"file":"component---src-templates-template-tsx-707860e284bea8e5f2cb.js","mappings":"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","sources":["webpack://yxxjimin.github.io/./src/components/Header.tsx","webpack://yxxjimin.github.io/./src/components/Footer.tsx","webpack://yxxjimin.github.io/./src/components/Layout.tsx","webpack://yxxjimin.github.io/./src/components/PostTitle.tsx","webpack://yxxjimin.github.io/./src/templates/Template.tsx"],"sourcesContent":["import { Link } from \"gatsby\";\nimport * as React from \"react\";\n\ntype Props = {\n  title: string;\n};\n\nconst Header = ({ title }: Props) => {\n  return (\n    <div className=\"flex justify-center w-full px-6 border-b bg-white\">\n      <div className=\"flex w-full max-w-4xl h-16 justify-between\">\n        <header className=\"flex items-center text-2xl font-semibold\">\n          <Link to=\"/\">{title}</Link>\n        </header>\n        <nav>\n          <ul className=\"flex space-x-4 h-full items-center font-light\">\n            <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/about\">About</Link></li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport * as React from \"react\";\n\nconst Footer = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          author\n          github\n        }\n      }\n    }\n  `);\n\n  return (\n    <footer className=\"flex w-full h-16 mt-auto justify-center items-center\">\n      <p className=\"max-w-4xl text-center\">\n        © {new Date().getFullYear()}\n        &nbsp;\n        <a \n          className=\"font-medium text-blue-500\"\n          href={data.site.siteMetadata.github}\n        >\n          {data.site.siteMetadata.author}\n        </a>\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import * as React from \"react\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\ntype Props = {\n  backgroundColor?: string;\n  postContent?: boolean;\n  children: React.ReactNode;\n};\n\nconst Layout = ({ backgroundColor, postContent = false, children }: Props) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <div className={`flex flex-col w-full min-h-screen items-center ${backgroundColor}`}>\n      <Header title={data.site.siteMetadata.title} />\n      <main className=\"flex flex-col w-full px-6 py-4\">\n        <div className={`w-full ${postContent ? \"max-w-2xl\" : \"max-w-4xl\"} mx-auto`}>\n          {children}\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n","import { Link } from \"gatsby\";\nimport * as React from \"react\";\n\ntype Props = {\n  title: string;\n  date: string;\n  categories: string;\n};\n\nconst PostTitle = ({ title, date, categories }: Props) => {\n  return (\n    <div className=\"mt-4 mb-10\">\n      <div className=\"flex space-x-2\">\n        {categories.split(\" \").map((cat, idx) => (\n          <Link to={`/${cat.toLowerCase()}`}>\n            <p\n              key={idx} \n              className=\"text-xs font-md text-white bg-blue-500 rounded-full px-2 py-1\">\n              {cat}\n            </p>\n          </Link>\n        ))}\n      </div>\n      <h1 className=\"text-4xl font-bold my-4\">\n        {title}\n      </h1>\n      <p className=\"text-sm font-light text-gray-400\">\n        {date}\n      </p>\n    </div>\n  );\n};\n\nexport default PostTitle;\n","import { graphql, Link } from \"gatsby\";\nimport * as React from \"react\";\nimport Layout from \"../components/Layout\";\nimport PostTitle from \"../components/PostTitle\";\n\ntype NavNode = {\n  frontmatter: {\n    title: string;\n  };\n  fields: {\n    slug: string;\n  };\n};\n\ntype DataProps = {\n  data: {\n    node: {\n      id: string;\n      html: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        categories: string;\n      };\n      fields: {\n        slug: string;\n      };\n    };\n    next: NavNode;\n    prev: NavNode;\n  };\n};\n\nconst NavPost = ({ node, prev }: { node: NavNode, prev: boolean }) => {\n  return (\n    <Link to={`/post${node.fields.slug}`}>\n      <div className=\"h-full p-6 space-y-4 rounded-xl bg-neutral-100\">\n        <p className=\"text-neutral-500\">\n          {prev ? \"이전 글\": \"다음 글\"}\n        </p>\n        <p className=\"text-xl font-semibold\">\n          {node.frontmatter.title}\n        </p>\n      </div>\n    </Link>\n  );\n};\n\nconst Template = ({ data }: DataProps) => {\n  return (\n    <Layout backgroundColor=\"bg-white\" postContent={true}>\n      <PostTitle \n        title={data.node.frontmatter.title} \n        date={data.node.frontmatter.date}\n        categories={data.node.frontmatter.categories}\n      />\n      <div \n        className=\"markdown-html\"\n        dangerouslySetInnerHTML={{ __html: data.node.html }} \n      />\n      <div className=\"grid mt-10 gap-4 grid-cols-2 items-stretch\">\n        {data.next ? (<NavPost node={data.next} prev={true} />) : (<p></p>)}\n        {data.prev ? (<NavPost node={data.prev} prev={false} />) : (<p></p>)}\n      </div>\n    </Layout>\n  );\n};\n\nexport default Template;\n\nexport const query = graphql`\n  query($slug: String, $nextSlug: String, $prevSlug: String) {\n    node: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n        categories\n      }\n      fields {\n        slug\n      }\n    }\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n"],"names":["_ref","title","React","className","Link","to","data","useStaticQuery","Date","getFullYear","href","site","siteMetadata","github","author","backgroundColor","postContent","children","Header","Footer","date","categories","split","map","cat","idx","toLowerCase","key","NavPost","node","prev","fields","slug","frontmatter","_ref2","Layout","PostTitle","dangerouslySetInnerHTML","__html","html","next"],"sourceRoot":""}